dec contaDigitos : num -> num;
dec SomaDigitos : num -> num;
dec mediaDigitos : num -> num;
dec collaz : num -> num;
dec calcN : num -> num;
dec exp : num # num -> num;
dec somaFaixa : num # num -> num;
dec dec2bin : num -> num;
dec sucessor : num -> num;
dec antecessor : num -> num;
dec minhaSoma : num # num -> num;
dec produto : num # num -> num;
dec bin2dec : num -> num;
dec binon : num # num -> num;

--- contaDigitos 0 <= 0;
--- contaDigitos n <= 1 + contaDigitos (n div 10);

--- SomaDigitos 0 <= 0;
--- SomaDigitos n <= n mod 10 + SomaDigitos (n div 10);

--- mediaDigitos n <= SomaDigitos n / contaDigitos n;

--- collaz 1 <= 1;
--- collaz n <= if abs n mod 2 = 0 then collaz (abs n div 2) else collaz (abs n * 3 + 1);

--- calcN 0 <= 0;
--- calcN n <= 1.5 + calcN (n - 1) / 2;

--- exp (1, 1) <= 1;
--- exp (x, n) <= x * exp (x, n - 1);

--- somaFaixa (m, n) <= if n < m then 0 else if m = n then m else n + somaFaixa (m, n - 1);

--- dec2bin 0 <= 0;
--- dec2bin n <= if n = 1 then 1 else n;
--- dec2bin n <= 10 * dec2bin (n div 2) + n mod 2;

--- sucessor n <= n + 1;

--- antecessor n <= n - 1;

--- minhaSoma (0, b) <= b;
--- minhaSoma (a, 0) <= a;
--- minhaSoma (0, 0) <= 0;
--- minhaSoma (a, b) <= minhaSoma (sucessor a, antecessor b);

--- produto (0, 0) <= 0;
--- produto (0, b) <= 0;
--- produto (a, 0) <= 0;
--- produto (1, b) <= b;
--- produto (a, 1) <= a;
--- produto (a, b) <= a + produto (a, b - 1);

--- bin2dec 0 <= 0;
--- bin2dec n <= 2 * bin2dec (n div 10) + n mod 10;

--- binon (n, 0) <= 1;
--- binon (n, k) <= (n - 1) / (k - 1) + (n - 1) / k;
--- binon (n, k) <= if n < k then error ("n < k") else if k = 0 then 1 else if k = n then 1 else binon (n - 1, k - 1) + binon (n - 1, k);
